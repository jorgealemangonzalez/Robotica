// Generated by gencpp from file turtle_sensor_poster/TurtlePosition.msg
// DO NOT EDIT!


#ifndef TURTLE_SENSOR_POSTER_MESSAGE_TURTLEPOSITION_H
#define TURTLE_SENSOR_POSTER_MESSAGE_TURTLEPOSITION_H

#include <ros/service_traits.h>


#include <turtle_sensor_poster/TurtlePositionRequest.h>
#include <turtle_sensor_poster/TurtlePositionResponse.h>


namespace turtle_sensor_poster
{

struct TurtlePosition
{

typedef TurtlePositionRequest Request;
typedef TurtlePositionResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct TurtlePosition
} // namespace turtle_sensor_poster


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::turtle_sensor_poster::TurtlePosition > {
  static const char* value()
  {
    return "2b71e7da7070ce1a7abc2fb513bda0ec";
  }

  static const char* value(const ::turtle_sensor_poster::TurtlePosition&) { return value(); }
};

template<>
struct DataType< ::turtle_sensor_poster::TurtlePosition > {
  static const char* value()
  {
    return "turtle_sensor_poster/TurtlePosition";
  }

  static const char* value(const ::turtle_sensor_poster::TurtlePosition&) { return value(); }
};


// service_traits::MD5Sum< ::turtle_sensor_poster::TurtlePositionRequest> should match 
// service_traits::MD5Sum< ::turtle_sensor_poster::TurtlePosition > 
template<>
struct MD5Sum< ::turtle_sensor_poster::TurtlePositionRequest>
{
  static const char* value()
  {
    return MD5Sum< ::turtle_sensor_poster::TurtlePosition >::value();
  }
  static const char* value(const ::turtle_sensor_poster::TurtlePositionRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::turtle_sensor_poster::TurtlePositionRequest> should match 
// service_traits::DataType< ::turtle_sensor_poster::TurtlePosition > 
template<>
struct DataType< ::turtle_sensor_poster::TurtlePositionRequest>
{
  static const char* value()
  {
    return DataType< ::turtle_sensor_poster::TurtlePosition >::value();
  }
  static const char* value(const ::turtle_sensor_poster::TurtlePositionRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::turtle_sensor_poster::TurtlePositionResponse> should match 
// service_traits::MD5Sum< ::turtle_sensor_poster::TurtlePosition > 
template<>
struct MD5Sum< ::turtle_sensor_poster::TurtlePositionResponse>
{
  static const char* value()
  {
    return MD5Sum< ::turtle_sensor_poster::TurtlePosition >::value();
  }
  static const char* value(const ::turtle_sensor_poster::TurtlePositionResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::turtle_sensor_poster::TurtlePositionResponse> should match 
// service_traits::DataType< ::turtle_sensor_poster::TurtlePosition > 
template<>
struct DataType< ::turtle_sensor_poster::TurtlePositionResponse>
{
  static const char* value()
  {
    return DataType< ::turtle_sensor_poster::TurtlePosition >::value();
  }
  static const char* value(const ::turtle_sensor_poster::TurtlePositionResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TURTLE_SENSOR_POSTER_MESSAGE_TURTLEPOSITION_H
